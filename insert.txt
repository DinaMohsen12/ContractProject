set serveroutput on 
create or replace   procedure insertinstll (conid number)
is
sdate CONTRACTS.CONTRACT_STARTDATE%type;
 edate CONTRACTS.CONTRACT_ENDDATE%type;
 payment  CONTRACTS.CONTRACT_PAYMENT_TYPE%type;
 tfees CONTRACTS.CONTRACT_TOTAL_FEES%type;
 dfees CONTRACTS.CONTRACT_DEPOSIT_FEES%type;
 paynum CONTRACTS.PAYMENTS_INSTALLMENTS_NUM%type;
 instamount number(10,2);
begin
select contract_startdate, contract_enddate,contract_payment_type,contract_total_fees, contract_deposit_fees,payments_installments_num
 into sdate,edate,payment , tfees,dfees,paynum
  from contracts where contract_id=conid;
  ------------------------------------------------------
while sdate < edate   loop
if payment='ANNUAL' then
instamount :=trunc((tfees-nvl(dfees,0))/paynum);
insert into installments (installment_id,contract_id,installment_date,installment_amount,paid) values
(insallseq.nextval,conid,sdate,instamount,0); 
dbms_output.put_line('startdate'||sdate||' totalpat '||instamount);
sdate :=  add_months(sdate,12);
--------------------------------------------

elsif   payment='QUARTER'
then 
instamount :=trunc((tfees-nvl(dfees,0))/paynum);
insert into installments (installment_id,contract_id,installment_date,installment_amount,paid) values
(insallseq.nextval,conid,sdate,instamount,0); 
dbms_output.put_line('startdate'||sdate||'  totalpat '||instamount);
sdate :=  add_months(sdate,3);
------------------------------------------------

elsif   payment='HALF_ANNUAL'
then 
instamount :=trunc((tfees-nvl(dfees,0))/paynum);
insert into installments (installment_id,contract_id,installment_date,installment_amount,paid) values
(insallseq.nextval,conid,sdate,instamount,0); 
dbms_output.put_line('startdate'||sdate||'  totalpat '||instamount);
sdate :=  add_months(sdate,6);
------------------------------------------
elsif   payment='MONTHLY'
then 
instamount :=trunc((tfees-nvl(dfees,0))/paynum);
insert into installments (installment_id,contract_id,installment_date,installment_amount,paid) values
(insallseq.nextval,conid,sdate,instamount,0); 
dbms_output.put_line('startdate'||sdate||'  totalpat '||instamount);
sdate :=  add_months(sdate,1);

end if;
end loop;
end;
select * from user_errors ;


