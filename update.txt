set serveroutput on 
create or replace procedure update_payment 
IS
cursor cur_payment is select * from contracts;
calc_annual  number(8,2);
calc_half    number(8,2);
calc_quarter  number (8,2);
Mnthly    number(8,2);
begin
for pay_record in   cur_payment  loop
if pay_record.contract_payment_type='ANNUAL' then
calc_annual := trunc(months_between(pay_record.contract_enddate,pay_record.contract_startdate)/12);
dbms_output.put_line('id '||pay_record.client_id||' annual '||calc_annual ||' contract'|| pay_record.contract_id);
update contracts set payments_installments_num =calc_annual where contract_payment_type='ANNUAL' and contract_id= pay_record.contract_id;

elsif pay_record.contract_payment_type='HALF_ANNUAL' then 
calc_half :=trunc(months_between(pay_record.contract_enddate,pay_record.contract_startdate)/6);
dbms_output.put_line('id '||pay_record.client_id||' half '||calc_half||' contract'||pay_record.contract_id);
update contracts set payments_installments_num =calc_half where contract_payment_type='HALF_ANNUAL' and  contract_id= pay_record.contract_id;

elsif 
pay_record.contract_payment_type='QUARTER' then 
calc_quarter :=trunc(months_between(pay_record.contract_enddate,pay_record.contract_startdate)/3);
dbms_output.put_line('id '||pay_record.client_id||' quart '||calc_quarter||' contract '||pay_record.contract_id);
update contracts set payments_installments_num =calc_quarter where contract_payment_type='QUARTER' and contract_id= pay_record.contract_id ;

else 
Mnthly :=trunc(months_between(pay_record.contract_enddate,pay_record.contract_startdate));
dbms_output.put_line('id '||pay_record.client_id||' Mnthly '||Mnthly||'  contract '||pay_record.contract_id);
update contracts set payments_installments_num =Mnthly where contract_payment_type='MONTHLY' and contract_id= pay_record.contract_id;
end if; 
end loop;
end;

select * from user_errors;
